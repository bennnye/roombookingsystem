/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roombooking;

import java.sql.ResultSet;

/**
 *
 * @author benny
 */
public class recordDisplay extends javax.swing.JFrame {

    /**
     * Creates new form recordDisplay
     */
    public recordDisplay() {
        initComponents();
        deleteCustomerRecord.setVisible(false);
        addCustomerRecord.setVisible(false);
        customerfnametextbox.setVisible(false);
        customerlnametextbox.setVisible(false);
        companytextbox.setVisible(false);
        customeremailtextbox.setVisible(false);
        customerfnamelable.setVisible(false);
        customerlnamelable.setVisible(false);
        companynamelable.setVisible(false);
        customeremaillable.setVisible(false);
        deleterefreshmentbookingbutton.setVisible(false);
        deleterefreshmentbutton.setVisible(false);
        deleteresourcebookingbutton.setVisible(false);
        deleteresourcebutton.setVisible(false);
        deleteroombookingbutton.setVisible(false);
        deletecleanerslotbutton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableSelectBox = new javax.swing.JComboBox<>();
        viewDataButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectedTable = new javax.swing.JTable();
        deleteCustomerRecord = new javax.swing.JButton();
        customerfnametextbox = new javax.swing.JTextField();
        customerlnametextbox = new javax.swing.JTextField();
        companytextbox = new javax.swing.JTextField();
        customeremailtextbox = new javax.swing.JTextField();
        addCustomerRecord = new javax.swing.JButton();
        customerfnamelable = new javax.swing.JLabel();
        customerlnamelable = new javax.swing.JLabel();
        companynamelable = new javax.swing.JLabel();
        customeremaillable = new javax.swing.JLabel();
        deleterefreshmentbookingbutton = new javax.swing.JButton();
        deleterefreshmentbutton = new javax.swing.JButton();
        deleteresourcebookingbutton = new javax.swing.JButton();
        deleteresourcebutton = new javax.swing.JButton();
        deleteroombookingbutton = new javax.swing.JButton();
        deletecleanerslotbutton = new javax.swing.JButton();
        roomnumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        starttime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        endtime = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addcleaner = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        roombookingnumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        refreshmentid = new javax.swing.JTextField();
        deliverytime = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addrefreshmentbooking = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableSelectBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "customer", "refreshmentbookig", "refreshments", "resourcebooking", "recorces", "room", "roombooking", "cleanershedule" }));
        tableSelectBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSelectBoxActionPerformed(evt);
            }
        });

        viewDataButton.setText("view data");
        viewDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDataButtonActionPerformed(evt);
            }
        });

        selectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(selectedTable);

        deleteCustomerRecord.setText("delete customer record");
        deleteCustomerRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerRecordActionPerformed(evt);
            }
        });

        customerfnametextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerfnametextboxActionPerformed(evt);
            }
        });

        customerlnametextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerlnametextboxActionPerformed(evt);
            }
        });

        companytextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companytextboxActionPerformed(evt);
            }
        });

        customeremailtextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customeremailtextboxActionPerformed(evt);
            }
        });

        addCustomerRecord.setText("add record");
        addCustomerRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerRecordActionPerformed(evt);
            }
        });

        customerfnamelable.setText("customer first name");

        customerlnamelable.setText("customer last name");

        companynamelable.setText("company name");

        customeremaillable.setText("customer email");

        deleterefreshmentbookingbutton.setText("delete refreshment booking");
        deleterefreshmentbookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleterefreshmentbookingbuttonActionPerformed(evt);
            }
        });

        deleterefreshmentbutton.setText("delete refreshment");
        deleterefreshmentbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleterefreshmentbuttonActionPerformed(evt);
            }
        });

        deleteresourcebookingbutton.setText("delete resource booking");
        deleteresourcebookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteresourcebookingbuttonActionPerformed(evt);
            }
        });

        deleteresourcebutton.setText("delete resource");
        deleteresourcebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteresourcebuttonActionPerformed(evt);
            }
        });

        deleteroombookingbutton.setText("delete room booking");
        deleteroombookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteroombookingbuttonActionPerformed(evt);
            }
        });

        deletecleanerslotbutton.setText("delete cleaner slot");
        deletecleanerslotbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletecleanerslotbuttonActionPerformed(evt);
            }
        });

        roomnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomnumberActionPerformed(evt);
            }
        });

        jLabel1.setText("room number");

        jLabel2.setText("start timestamp");

        jLabel3.setText("end timestamp");

        addcleaner.setText("add cleaner slot");
        addcleaner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcleanerActionPerformed(evt);
            }
        });

        jLabel4.setText("room booking number");

        jLabel5.setText("refreshment id");

        jLabel6.setText("delivery timestamp");

        addrefreshmentbooking.setText("add refreshment booking");
        addrefreshmentbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrefreshmentbookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tableSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(viewDataButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerfnametextbox)
                                    .addComponent(customerfnamelable, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerlnametextbox)
                                    .addComponent(customerlnamelable, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(companytextbox)
                                    .addComponent(companynamelable, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(customeremaillable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customeremailtextbox))
                        .addGap(18, 18, 18)
                        .addComponent(addCustomerRecord))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deleteCustomerRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleterefreshmentbookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleterefreshmentbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteresourcebookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteresourcebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteroombookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deletecleanerslotbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(roombookingnumber, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(roomnumber, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(starttime)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(refreshmentid))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(endtime)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deliverytime)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addcleaner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addrefreshmentbooking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewDataButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteCustomerRecord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleterefreshmentbookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleterefreshmentbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteresourcebookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteresourcebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteroombookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deletecleanerslotbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerfnamelable)
                            .addComponent(customerlnamelable)
                            .addComponent(companynamelable)
                            .addComponent(customeremaillable))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerfnametextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerlnametextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companytextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customeremailtextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerRecord))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addcleaner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roombookingnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshmentid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliverytime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addrefreshmentbooking))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableSelectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableSelectBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableSelectBoxActionPerformed

    private void viewDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDataButtonActionPerformed
        updateTableData();
        
        if(tableSelectBox.getSelectedItem().equals("customer")){
            deleteCustomerRecord.setVisible(true);
            addCustomerRecord.setVisible(true);
            customerfnametextbox.setVisible(true);
            customerlnametextbox.setVisible(true);
            companytextbox.setVisible(true);
            customeremailtextbox.setVisible(true);
            customerfnamelable.setVisible(true);
            customerlnamelable.setVisible(true);
            companynamelable.setVisible(true);
            customeremaillable.setVisible(true);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            deletecleanerslotbutton.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("cleanershedule")){
            deletecleanerslotbutton.setVisible(true);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
        } else if (tableSelectBox.getSelectedItem().equals("refreshmentbookig")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(true);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
        }else if (tableSelectBox.getSelectedItem().equals("refreshments")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(true);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
        } else if (tableSelectBox.getSelectedItem().equals("resourcebooking")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(true);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
        } else if (tableSelectBox.getSelectedItem().equals("resources")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(true);
            deleteroombookingbutton.setVisible(false);
        } else {
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(true);
            deletecleanerslotbutton.setVisible(false);
        }
    }//GEN-LAST:event_viewDataButtonActionPerformed

    private void deleteCustomerRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerRecordActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from customer where customerID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteCustomerRecordActionPerformed

    private void customerfnametextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerfnametextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerfnametextboxActionPerformed

    private void customerlnametextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerlnametextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerlnametextboxActionPerformed

    private void companytextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companytextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companytextboxActionPerformed

    private void addCustomerRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerRecordActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into customer (" + idvalue + ", " + customerfnametextbox.getText() + ", " + customerlnametextbox.getText() + ", " + companytextbox.getText()  + ", " + customeremailtextbox.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addCustomerRecordActionPerformed

    private void customeremailtextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customeremailtextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customeremailtextboxActionPerformed

    private void deleterefreshmentbookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleterefreshmentbookingbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from refreshmentbookig where refreshmentbookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleterefreshmentbookingbuttonActionPerformed

    private void deleterefreshmentbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleterefreshmentbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from refreshments where refreshmentsID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleterefreshmentbuttonActionPerformed

    private void deleteresourcebookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteresourcebookingbuttonActionPerformed
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from resourcebookig where resourcebookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_deleteresourcebookingbuttonActionPerformed

    private void deleteresourcebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteresourcebuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from resource where resourceID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteresourcebuttonActionPerformed

    private void deleteroombookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteroombookingbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from roombookig where roombookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteroombookingbuttonActionPerformed

    private void deletecleanerslotbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletecleanerslotbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from cleanershedule where cleanerslotID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deletecleanerslotbuttonActionPerformed

    private void roomnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomnumberActionPerformed

    private void addcleanerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcleanerActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into cleanershedule (" + idvalue + ", " + roomnumber.getText() + ", " + starttime.getText() + ", " + endtime.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addcleanerActionPerformed

    private void addrefreshmentbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrefreshmentbookingActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + roombookingnumber.getText() + ", " + refreshmentid+ ", " + deliverytime.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addrefreshmentbookingActionPerformed

    public void updateTableData(){
        
        try {
            
            ResultSet resultset = databaseSQLHandler.executeQuery("select ' from "+tableSelectBox.getSelectedItem());
            
            String[] columns = new String[resultset.getMetaData().getColumnCount()];
            
            for (int i = 0; i < columns.length; i++) {
                columns[i] = resultset.getMetaData().getColumnLabel(i+1);
            }
            
            resultset.last();
            int totalRows = resultset.getRow();
            
            resultset.first();
            
            Object[][] rows = new Object[totalRows][columns.length];
            
            for (int i = 0; i < totalRows; i++) {
                for (int j = 0; j < columns.length; j++) {
                    rows[i][j] = resultset.getObject(columns[j]);
                }
                resultset.next();
            }
            
            selectedTable.setModel(new javax.swing.table.DefaultTableModel(rows, columns));
            
            resultset.close();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recordDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerRecord;
    private javax.swing.JButton addcleaner;
    private javax.swing.JButton addrefreshmentbooking;
    private javax.swing.JLabel companynamelable;
    private javax.swing.JTextField companytextbox;
    private javax.swing.JLabel customeremaillable;
    private javax.swing.JTextField customeremailtextbox;
    private javax.swing.JLabel customerfnamelable;
    private javax.swing.JTextField customerfnametextbox;
    private javax.swing.JLabel customerlnamelable;
    private javax.swing.JTextField customerlnametextbox;
    private javax.swing.JButton deleteCustomerRecord;
    private javax.swing.JButton deletecleanerslotbutton;
    private javax.swing.JButton deleterefreshmentbookingbutton;
    private javax.swing.JButton deleterefreshmentbutton;
    private javax.swing.JButton deleteresourcebookingbutton;
    private javax.swing.JButton deleteresourcebutton;
    private javax.swing.JButton deleteroombookingbutton;
    private javax.swing.JTextField deliverytime;
    private javax.swing.JTextField endtime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField refreshmentid;
    private javax.swing.JTextField roombookingnumber;
    private javax.swing.JTextField roomnumber;
    private javax.swing.JTable selectedTable;
    private javax.swing.JTextField starttime;
    private javax.swing.JComboBox<String> tableSelectBox;
    private javax.swing.JButton viewDataButton;
    // End of variables declaration//GEN-END:variables
}
