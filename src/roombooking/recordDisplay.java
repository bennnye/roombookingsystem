/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roombooking;

import java.sql.ResultSet;

/**
 *
 * @author benny
 */
public class recordDisplay extends javax.swing.JFrame {

    /**
     * Creates new form recordDisplay
     */
    public recordDisplay() {
        initComponents();
        deleteCustomerRecord.setVisible(false);
        addCustomerRecord.setVisible(false);
        customerfnametextbox.setVisible(false);
        customerlnametextbox.setVisible(false);
        companytextbox.setVisible(false);
        customeremailtextbox.setVisible(false);
        customerfnamelable.setVisible(false);
        customerlnamelable.setVisible(false);
        companynamelable.setVisible(false);
        customeremaillable.setVisible(false);
        deleterefreshmentbookingbutton.setVisible(false);
        deleterefreshmentbutton.setVisible(false);
        deleteresourcebookingbutton.setVisible(false);
        deleteresourcebutton.setVisible(false);
        deleteroombookingbutton.setVisible(false);
        deletecleanerslotbutton.setVisible(false);
        addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableSelectBox = new javax.swing.JComboBox<>();
        viewDataButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectedTable = new javax.swing.JTable();
        deleteCustomerRecord = new javax.swing.JButton();
        customerfnametextbox = new javax.swing.JTextField();
        customerlnametextbox = new javax.swing.JTextField();
        companytextbox = new javax.swing.JTextField();
        customeremailtextbox = new javax.swing.JTextField();
        addCustomerRecord = new javax.swing.JButton();
        customerfnamelable = new javax.swing.JLabel();
        customerlnamelable = new javax.swing.JLabel();
        companynamelable = new javax.swing.JLabel();
        customeremaillable = new javax.swing.JLabel();
        deleterefreshmentbookingbutton = new javax.swing.JButton();
        deleterefreshmentbutton = new javax.swing.JButton();
        deleteresourcebookingbutton = new javax.swing.JButton();
        deleteresourcebutton = new javax.swing.JButton();
        deleteroombookingbutton = new javax.swing.JButton();
        deletecleanerslotbutton = new javax.swing.JButton();
        roomnumber = new javax.swing.JTextField();
        roomnumberlable = new javax.swing.JLabel();
        starttime = new javax.swing.JTextField();
        starttimestamplable = new javax.swing.JLabel();
        endtime = new javax.swing.JTextField();
        endtimestamplable = new javax.swing.JLabel();
        addcleaner = new javax.swing.JButton();
        roombookingnumberlable = new javax.swing.JLabel();
        roombookingnumber = new javax.swing.JTextField();
        refreshmentidlable = new javax.swing.JLabel();
        refreshmentid = new javax.swing.JTextField();
        deliverytime = new javax.swing.JTextField();
        deliverytimestamplable = new javax.swing.JLabel();
        addrefreshmentbooking = new javax.swing.JButton();
        refreshmentlable = new javax.swing.JLabel();
        resorcelable = new javax.swing.JLabel();
        refreshmentText = new javax.swing.JTextField();
        addRefreshmentButton = new javax.swing.JButton();
        resourcefield = new javax.swing.JTextField();
        addResorceButton = new javax.swing.JButton();
        roombookingnolable = new javax.swing.JLabel();
        resourceidlable = new javax.swing.JLabel();
        deliverytimelable = new javax.swing.JLabel();
        roombookingnotext = new javax.swing.JTextField();
        resourceidtext = new javax.swing.JTextField();
        deliveryTimeText = new javax.swing.JTextField();
        addresourcebookingbutton = new javax.swing.JButton();
        customeridlable = new javax.swing.JLabel();
        roomnolable = new javax.swing.JLabel();
        bookaroombutton = new javax.swing.JButton();
        starttimelable = new javax.swing.JLabel();
        endtimelable = new javax.swing.JLabel();
        customerid = new javax.swing.JTextField();
        roomno = new javax.swing.JTextField();
        starttimetext = new javax.swing.JTextField();
        endtimetext = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableSelectBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "customer", "refreshmentbookig", "refreshments", "resourcebooking", "recorces", "room", "roombooking", "cleanershedule" }));
        tableSelectBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSelectBoxActionPerformed(evt);
            }
        });

        viewDataButton.setText("view data");
        viewDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDataButtonActionPerformed(evt);
            }
        });

        selectedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(selectedTable);

        deleteCustomerRecord.setText("delete customer record");
        deleteCustomerRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerRecordActionPerformed(evt);
            }
        });

        customerfnametextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerfnametextboxActionPerformed(evt);
            }
        });

        customerlnametextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerlnametextboxActionPerformed(evt);
            }
        });

        companytextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companytextboxActionPerformed(evt);
            }
        });

        customeremailtextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customeremailtextboxActionPerformed(evt);
            }
        });

        addCustomerRecord.setText("add customer");
        addCustomerRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerRecordActionPerformed(evt);
            }
        });

        customerfnamelable.setText("customer first name");

        customerlnamelable.setText("customer last name");

        companynamelable.setText("company name");

        customeremaillable.setText("customer email");

        deleterefreshmentbookingbutton.setText("delete refreshment booking");
        deleterefreshmentbookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleterefreshmentbookingbuttonActionPerformed(evt);
            }
        });

        deleterefreshmentbutton.setText("delete refreshment");
        deleterefreshmentbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleterefreshmentbuttonActionPerformed(evt);
            }
        });

        deleteresourcebookingbutton.setText("delete resource booking");
        deleteresourcebookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteresourcebookingbuttonActionPerformed(evt);
            }
        });

        deleteresourcebutton.setText("delete resource");
        deleteresourcebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteresourcebuttonActionPerformed(evt);
            }
        });

        deleteroombookingbutton.setText("delete room booking");
        deleteroombookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteroombookingbuttonActionPerformed(evt);
            }
        });

        deletecleanerslotbutton.setText("delete cleaner slot");
        deletecleanerslotbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletecleanerslotbuttonActionPerformed(evt);
            }
        });

        roomnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomnumberActionPerformed(evt);
            }
        });

        roomnumberlable.setText("room number");

        starttimestamplable.setText("start timestamp");

        endtimestamplable.setText("end timestamp");

        addcleaner.setText("add cleaner slot");
        addcleaner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcleanerActionPerformed(evt);
            }
        });

        roombookingnumberlable.setText("room booking number");

        refreshmentidlable.setText("refreshment id");

        deliverytimestamplable.setText("delivery timestamp");

        addrefreshmentbooking.setText("add refreshment booking");
        addrefreshmentbooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrefreshmentbookingActionPerformed(evt);
            }
        });

        refreshmentlable.setText("refreshment");

        resorcelable.setText("resource");

        addRefreshmentButton.setText("add refreshment");
        addRefreshmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRefreshmentButtonActionPerformed(evt);
            }
        });

        addResorceButton.setText("add resource");
        addResorceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResorceButtonActionPerformed(evt);
            }
        });

        roombookingnolable.setText("room booking number");

        resourceidlable.setText("resource ID");

        deliverytimelable.setText("delivery timestamp");

        addresourcebookingbutton.setText("add resource booking");
        addresourcebookingbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addresourcebookingbuttonActionPerformed(evt);
            }
        });

        customeridlable.setText("customer ID");

        roomnolable.setText("room number");

        bookaroombutton.setText("book a room");
        bookaroombutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookaroombuttonActionPerformed(evt);
            }
        });

        starttimelable.setText("start timestamp");

        endtimelable.setText("end timestamp");

        starttimetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starttimetextActionPerformed(evt);
            }
        });

        endtimetext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endtimetextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tableSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(viewDataButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerfnametextbox)
                                    .addComponent(customerfnamelable, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerlnametextbox)
                                    .addComponent(customerlnamelable, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(companytextbox)
                                    .addComponent(companynamelable, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(customeremaillable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(customeremailtextbox))
                        .addGap(18, 18, 18)
                        .addComponent(addCustomerRecord))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deleteCustomerRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleterefreshmentbookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleterefreshmentbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteresourcebookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteresourcebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteroombookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deletecleanerslotbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(roombookingnotext, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(roombookingnolable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(refreshmentText, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(refreshmentlable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(roombookingnumber, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(roombookingnumberlable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                            .addComponent(roomnumber, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(roomnumberlable, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(starttime)
                                            .addComponent(starttimestamplable, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                            .addComponent(refreshmentidlable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(refreshmentid)
                                            .addComponent(addRefreshmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(resourceidlable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(resourceidtext)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(customeridlable, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(roomnolable, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                            .addComponent(roomno))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(endtime)
                                            .addComponent(endtimestamplable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deliverytime)
                                            .addComponent(deliverytimestamplable, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                            .addComponent(resorcelable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(resourcefield)
                                            .addComponent(deliverytimelable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deliveryTimeText))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(addcleaner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addrefreshmentbooking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addResorceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addresourcebookingbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(starttimetext, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(starttimelable, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(endtimelable, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(endtimetext, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)
                                        .addComponent(bookaroombutton)))))
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewDataButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteCustomerRecord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleterefreshmentbookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleterefreshmentbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteresourcebookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteresourcebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteroombookingbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deletecleanerslotbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerfnamelable)
                            .addComponent(customerlnamelable)
                            .addComponent(companynamelable)
                            .addComponent(customeremaillable))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerfnametextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerlnametextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companytextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customeremailtextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerRecord))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomnumberlable)
                    .addComponent(starttimestamplable)
                    .addComponent(endtimestamplable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addcleaner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roombookingnumberlable)
                    .addComponent(refreshmentidlable)
                    .addComponent(deliverytimestamplable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roombookingnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshmentid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliverytime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addrefreshmentbooking))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshmentlable)
                    .addComponent(resorcelable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshmentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addRefreshmentButton)
                    .addComponent(resourcefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addResorceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roombookingnolable)
                    .addComponent(resourceidlable)
                    .addComponent(deliverytimelable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roombookingnotext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resourceidtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliveryTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addresourcebookingbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customeridlable)
                    .addComponent(roomnolable)
                    .addComponent(starttimelable)
                    .addComponent(endtimelable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(starttimetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endtimetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookaroombutton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableSelectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableSelectBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableSelectBoxActionPerformed

    private void viewDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDataButtonActionPerformed
        updateTableData();
        
        if(tableSelectBox.getSelectedItem().equals("customer")){
            deleteCustomerRecord.setVisible(true);
            addCustomerRecord.setVisible(true);
            customerfnametextbox.setVisible(true);
            customerlnametextbox.setVisible(true);
            companytextbox.setVisible(true);
            customeremailtextbox.setVisible(true);
            customerfnamelable.setVisible(true);
            customerlnamelable.setVisible(true);
            companynamelable.setVisible(true);
            customeremaillable.setVisible(true);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            deletecleanerslotbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("cleanershedule")){
            deletecleanerslotbutton.setVisible(true);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(true);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(true);
            endtimelable.setVisible(true);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(true);
            roombookingnumberlable.setVisible(true);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(true);
            roomnumberlable.setVisible(true);
            starttime.setVisible(true);
            starttimelable.setVisible(true);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("refreshmentbookig")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(true);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(true);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(true);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(true);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(true);
            refreshmentidlable.setVisible(true);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        }else if (tableSelectBox.getSelectedItem().equals("refreshments")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(true);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            addRefreshmentButton.setVisible(true);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(true);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("resourcebooking")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(true);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(true);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(true);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(true);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(true);
            resourceidtext.setVisible(true);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("resources")){
            deletecleanerslotbutton.setVisible(false);
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(true);
            deleteroombookingbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(true);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(true);
            resourcefield.setVisible(true);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
            
        } else if (tableSelectBox.getSelectedItem().equals("roombooking")){
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(true);
            deletecleanerslotbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(true);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(true);
            endtimetext.setVisible(true);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(true);
            roombookingnotext.setVisible(true);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(true);
            roomnolable.setVisible(true);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(true);
            starttimetext.setVisible(true);
            
        } else {
            deleteCustomerRecord.setVisible(false);
            addCustomerRecord.setVisible(false);
            customerfnametextbox.setVisible(false);
            customerlnametextbox.setVisible(false);
            companytextbox.setVisible(false);
            customeremailtextbox.setVisible(false);
            customerfnamelable.setVisible(false);
            customerlnamelable.setVisible(false);
            companynamelable.setVisible(false);
            customeremaillable.setVisible(false);
            deleterefreshmentbookingbutton.setVisible(false);
            deleterefreshmentbutton.setVisible(false);
            deleteresourcebookingbutton.setVisible(false);
            deleteresourcebutton.setVisible(false);
            deleteroombookingbutton.setVisible(false);
            deletecleanerslotbutton.setVisible(false);
            addRefreshmentButton.setVisible(false);
            addResorceButton.setVisible(false);
            addcleaner.setVisible(false);
            addrefreshmentbooking.setVisible(false);
            addresourcebookingbutton.setVisible(false);
            bookaroombutton.setVisible(false);
            deliveryTimeText.setVisible(false);
            deliverytime.setVisible(false);
            deliverytimelable.setVisible(false);
            deliverytimestamplable.setVisible(false);
            endtime.setVisible(false);
            endtimelable.setVisible(false);
            endtimestamplable.setVisible(false);
            endtimetext.setVisible(false);
            refreshmentText.setVisible(false);
            refreshmentid.setVisible(false);
            refreshmentidlable.setVisible(false);
            resorcelable.setVisible(false);
            resourcefield.setVisible(false);
            resourceidlable.setVisible(false);
            resourceidtext.setVisible(false);
            roombookingnolable.setVisible(false);
            roombookingnotext.setVisible(false);
            roombookingnumber.setVisible(false);
            roombookingnumberlable.setVisible(false);
            roomno.setVisible(false);
            roomnolable.setVisible(false);
            roomnumber.setVisible(false);
            roomnumberlable.setVisible(false);
            starttime.setVisible(false);
            starttimelable.setVisible(false);
            starttimestamplable.setVisible(false);
            starttimetext.setVisible(false);
        }
    }//GEN-LAST:event_viewDataButtonActionPerformed

    private void deleteCustomerRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerRecordActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from customer where customerID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteCustomerRecordActionPerformed

    private void customerfnametextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerfnametextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerfnametextboxActionPerformed

    private void customerlnametextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerlnametextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerlnametextboxActionPerformed

    private void companytextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companytextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companytextboxActionPerformed

    private void addCustomerRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerRecordActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into customer (" + idvalue + ", " + customerfnametextbox.getText() + ", " + customerlnametextbox.getText() + ", " + companytextbox.getText()  + ", " + customeremailtextbox.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addCustomerRecordActionPerformed

    private void customeremailtextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customeremailtextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customeremailtextboxActionPerformed

    private void deleterefreshmentbookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleterefreshmentbookingbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from refreshmentbookig where refreshmentbookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleterefreshmentbookingbuttonActionPerformed

    private void deleterefreshmentbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleterefreshmentbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from refreshments where refreshmentsID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleterefreshmentbuttonActionPerformed

    private void deleteresourcebookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteresourcebookingbuttonActionPerformed
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from resourcebookig where resourcebookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_deleteresourcebookingbuttonActionPerformed

    private void deleteresourcebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteresourcebuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from resource where resourceID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteresourcebuttonActionPerformed

    private void deleteroombookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteroombookingbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from roombookig where roombookingID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deleteroombookingbuttonActionPerformed

    private void deletecleanerslotbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletecleanerslotbuttonActionPerformed
        
        try {
            
            int selectedID = (int) selectedTable.getValueAt(selectedTable.getSelectedRow(), 0);
            
            databaseSQLHandler.executeUpdateQuirey("delete from cleanershedule where cleanerslotID = " + selectedID);
            
            updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_deletecleanerslotbuttonActionPerformed

    private void roomnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomnumberActionPerformed

    private void addcleanerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcleanerActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into cleanershedule (" + idvalue + ", " + roomnumber.getText() + ", " + starttime.getText() + ", " + endtime.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addcleanerActionPerformed

    private void addrefreshmentbookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrefreshmentbookingActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + roombookingnumber.getText() + ", " + refreshmentid+ ", " + deliverytime.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addrefreshmentbookingActionPerformed

    private void addRefreshmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRefreshmentButtonActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + refreshmentText.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addRefreshmentButtonActionPerformed

    private void addResorceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResorceButtonActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + resourcefield.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addResorceButtonActionPerformed

    private void addresourcebookingbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addresourcebookingbuttonActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + customerid + ", " + roomno + ", " + starttimelable.getText() + ", " + endtimetext.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_addresourcebookingbuttonActionPerformed

    private void starttimetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starttimetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_starttimetextActionPerformed

    private void endtimetextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endtimetextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endtimetextActionPerformed

    private void bookaroombuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookaroombuttonActionPerformed
        
        try {
            
          ResultSet resultset = databaseSQLHandler.executeQuery("select max(customerid) as maxid from app.customer");
          resultset.next();
          
          int idvalue = resultset.getInt("maxid")+1;
          
          databaseSQLHandler.executeUpdateQuirey("insert into refreshmentbooking (" + idvalue + ", " + roombookingnumber.getText() + ", " + refreshmentid+ ", " + deliverytime.getText());
          
          resultset.close();
          
          updateTableData();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }//GEN-LAST:event_bookaroombuttonActionPerformed

    public void updateTableData(){
        
        try {
            
            ResultSet resultset = databaseSQLHandler.executeQuery("select ' from "+tableSelectBox.getSelectedItem());
            
            String[] columns = new String[resultset.getMetaData().getColumnCount()];
            
            for (int i = 0; i < columns.length; i++) {
                columns[i] = resultset.getMetaData().getColumnLabel(i+1);
            }
            
            resultset.last();
            int totalRows = resultset.getRow();
            
            resultset.first();
            
            Object[][] rows = new Object[totalRows][columns.length];
            
            for (int i = 0; i < totalRows; i++) {
                for (int j = 0; j < columns.length; j++) {
                    rows[i][j] = resultset.getObject(columns[j]);
                }
                resultset.next();
            }
            
            selectedTable.setModel(new javax.swing.table.DefaultTableModel(rows, columns));
            
            resultset.close();
            
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(recordDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new recordDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerRecord;
    private javax.swing.JButton addRefreshmentButton;
    private javax.swing.JButton addResorceButton;
    private javax.swing.JButton addcleaner;
    private javax.swing.JButton addrefreshmentbooking;
    private javax.swing.JButton addresourcebookingbutton;
    private javax.swing.JButton bookaroombutton;
    private javax.swing.JLabel companynamelable;
    private javax.swing.JTextField companytextbox;
    private javax.swing.JLabel customeremaillable;
    private javax.swing.JTextField customeremailtextbox;
    private javax.swing.JLabel customerfnamelable;
    private javax.swing.JTextField customerfnametextbox;
    private javax.swing.JTextField customerid;
    private javax.swing.JLabel customeridlable;
    private javax.swing.JLabel customerlnamelable;
    private javax.swing.JTextField customerlnametextbox;
    private javax.swing.JButton deleteCustomerRecord;
    private javax.swing.JButton deletecleanerslotbutton;
    private javax.swing.JButton deleterefreshmentbookingbutton;
    private javax.swing.JButton deleterefreshmentbutton;
    private javax.swing.JButton deleteresourcebookingbutton;
    private javax.swing.JButton deleteresourcebutton;
    private javax.swing.JButton deleteroombookingbutton;
    private javax.swing.JTextField deliveryTimeText;
    private javax.swing.JTextField deliverytime;
    private javax.swing.JLabel deliverytimelable;
    private javax.swing.JLabel deliverytimestamplable;
    private javax.swing.JTextField endtime;
    private javax.swing.JLabel endtimelable;
    private javax.swing.JLabel endtimestamplable;
    private javax.swing.JTextField endtimetext;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField refreshmentText;
    private javax.swing.JTextField refreshmentid;
    private javax.swing.JLabel refreshmentidlable;
    private javax.swing.JLabel refreshmentlable;
    private javax.swing.JLabel resorcelable;
    private javax.swing.JTextField resourcefield;
    private javax.swing.JLabel resourceidlable;
    private javax.swing.JTextField resourceidtext;
    private javax.swing.JLabel roombookingnolable;
    private javax.swing.JTextField roombookingnotext;
    private javax.swing.JTextField roombookingnumber;
    private javax.swing.JLabel roombookingnumberlable;
    private javax.swing.JTextField roomno;
    private javax.swing.JLabel roomnolable;
    private javax.swing.JTextField roomnumber;
    private javax.swing.JLabel roomnumberlable;
    private javax.swing.JTable selectedTable;
    private javax.swing.JTextField starttime;
    private javax.swing.JLabel starttimelable;
    private javax.swing.JLabel starttimestamplable;
    private javax.swing.JTextField starttimetext;
    private javax.swing.JComboBox<String> tableSelectBox;
    private javax.swing.JButton viewDataButton;
    // End of variables declaration//GEN-END:variables
}
